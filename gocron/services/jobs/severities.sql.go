// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: severities.sql

package jobs

import (
	"context"
)

const createSeverity = `-- name: CreateSeverity :one
INSERT INTO
    severities (severity)
VALUES
    (?) RETURNING id, severity
`

func (q *Queries) CreateSeverity(ctx context.Context, severity string) (Severity, error) {
	row := q.db.QueryRowContext(ctx, createSeverity, severity)
	var i Severity
	err := row.Scan(&i.ID, &i.Severity)
	return i, err
}

const listSeverities = `-- name: ListSeverities :many
SELECT
    id, severity
FROM
    severities
ORDER BY
    id
`

func (q *Queries) ListSeverities(ctx context.Context) ([]Severity, error) {
	rows, err := q.db.QueryContext(ctx, listSeverities)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Severity
	for rows.Next() {
		var i Severity
		if err := rows.Scan(&i.ID, &i.Severity); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
