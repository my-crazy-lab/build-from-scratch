services:
  app:
    restart: always
    build:
      context: .
      dockerfile: docker/dev.dockerfile
    command: >
      air 
      --build.cmd "go build -o tmp/bin/main ." 
      --build.include_ext "go"
      --build.exclude_dir "web,docs"
      --build.exclude_regex "^.*\.templ$"
      --build.bin "tmp/bin/main" 
      --build.delay "100" 
      --build.stop_on_error "false" 
      --misc.clean_on_exit true
    hostname: gocron
    volumes:
      - ./:/app/
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=Europe/Berlin
      - NTFY_URL=https://ntfy.hoss.it/
      - NTFY_TOPIC=Backup
    ports:
      - 8156:8156

  frontend:
    restart: always
    image: node:lts
    working_dir: /app
    command: sh -c "yarn install && yarn dev"
    volumes:
      - ./web:/app/
    ports:
      - 5173:5173

  types:
    profiles:
      - dev
    build:
      context: .
      dockerfile_inline: |
        FROM golang:1.24
        RUN wget -qO- https://deb.nodesource.com/setup_22.x -O setup.sh
        RUN bash setup.sh

        RUN apt-get update && apt-get install -y nodejs
        RUN npm install -g yarn

        RUN go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest

        WORKDIR /app
    command: sh -c "sqlc generate && wget -qO- http://host.docker.internal:8156/api/openapi.json -O web/openapi.json && (cd /app/web && yarn && yarn types)"
    volumes:
      - ./:/app/
